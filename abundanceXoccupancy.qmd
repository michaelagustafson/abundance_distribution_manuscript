---
title: "Prey Abundance and Gyrfalcon Occupancy Relationship"
format: html
editor: visual
---

# Library

```{r library}

library(tidyr)
library(dplyr)
library(sf)
library(terra)
library(ggplot2)
library(exactextractr)
```

# Load Data for Masking Abundance Rasters

```{r dataload}

# 1. standardized vegetation data for each prey survey point

veg_points_standardized <- read.csv("F:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/si_obs_covs_scaled_16nov23.csv")

# keep only tundra, tussock, low shrub, tall shrub, and sparseveg
veg_points_standardized <- select(veg_points_standardized, id, tundra, tussock, tallshrub, lowshrub, sparseveg)

# 2. standardized vegetation raster layers

tundra <- terra::rast("F:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/percent cover standardized/tundra.tif")

tussock <- terra::rast("F:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/percent cover standardized/tussock.tif")

tallshrub <- terra::rast("F:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/percent cover standardized/tallshrub.tif")

lowshrub <- terra::rast("F:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/percent cover standardized/lowshrub.tif")

sparseveg <- terra::rast("F:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/percent cover standardized/sparseveg.tif")


# 3. abundance layer for each species

willow_abun <- rast("F:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/Willow_Prediction_22Mar24/Predicted.tif")

rock_abun <- rast("F:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/Rock_Prediction_22Mar24/Predicted.tif")

squirrel_abun <- rast("F:/gyrf_analysis/MSgyrfalcon/MSgyrfalcon/Squirrel_Prediction_22Mar24/Predicted.tif")

```

### Check CRS of veg and abundance layers

```{r check crs}


crs(tallshrub)
crs(tundra)
crs(tussock)
crs(lowshrub)
crs(sparseveg)
crs(willow_abun)
crs(rock_abun)
crs(squirrel_abun)


# apparently squirrel doesn't have CRS??????? We'll set it here the same as all others

# Get the CRS from Raster 2
crs_raster2 <- crs(rock_abun)

# Assign the CRS from Raster 2 to Raster 1
crs(squirrel_abun) <- crs_raster2

```

## Begin masking data

Need to mask species abundance layers with the min and max observed values of each habitat type (the percentages we calculated for a 400m radius around each prey survey point) to remove any pixels that contain percentages greater than or less than what we actually observed for this more precise prediction of abundance within a Gyrfalcon territory.

```{r willow}


veg_points<- as.data.frame(veg_points_standardized)

#mask to observed values
min(veg_points$tundra); max(veg_points$tundra)
min(veg_points$tussock); max(veg_points$tussock)
min(veg_points$tallshrub); max(veg_points$tallshrub)
min(veg_points$lowshrub); max(veg_points$lowshrub)
min(veg_points$sparseveg);max(veg_points$sparseveg)

willow_mask <- willow_abun

willow_mask[ tundra < min(veg_points$tundra) ] <- NA
willow_mask[ tundra > max(veg_points$tundra) ] <- NA
willow_mask[ tussock < min(veg_points$tussock) ] <- NA
willow_mask[ tussock > max(veg_points$tussock) ] <- NA
willow_mask[ tallshrub < min(veg_points$tallshrub) ] <- NA
willow_mask[ tallshrub > max(veg_points$tallshrub) ] <- NA

plot(willow_mask)



```

```{r rock}

rock_mask <- rock_abun

rock_mask[ tundra < min(veg_points$tundra) ] <- NA
rock_mask[ tundra > max(veg_points$tundra) ] <- NA
rock_mask[ lowshrub < min(veg_points$lowshrub) ] <- NA
rock_mask[ lowshrub > max(veg_points$lowshrub) ] <- NA
rock_mask[ sparseveg < min(veg_points$sparseveg) ] <- NA
rock_mask[ sparseveg > max(veg_points$sparseveg) ] <- NA

plot(rock_mask)

```

```{r squirrel}

squirrel_mask <- squirrel_abun

squirrel_mask[ tundra < min(veg_points$tundra) ] <- NA
squirrel_mask[ tundra > max(veg_points$tundra) ] <- NA
squirrel_mask[ lowshrub < min(veg_points$lowshrub) ] <- NA
squirrel_mask[ lowshrub > max(veg_points$lowshrub) ] <- NA
squirrel_mask[ sparseveg < min(veg_points$sparseveg) ] <- NA
squirrel_mask[ sparseveg > max(veg_points$sparseveg) ] <- NA

plot(squirrel_mask)

```

# Create buffers around territory center points

### Load point data for creating territory buffers

```{r load data}

# territory center points from Booms data - currently in a geographic CRS of WGS84
points_sf <- st_read("F:/Gyrfalcon Survey Data/booms_centroids_shapefile.shp")

# not using Bente Data so keep column title as GyrfalconTerritory
#points_sf <- points_sf %>%
  #rename(GyrfalconTerritory = NT_FR)

# territories surveyed every year 2016-2022 data

gyr_terrs <- read.csv("F:/Gyrfalcon Survey Data/gyrfocccounts.csv")

```

### Pull out survey points that were surveyed every year from 2016-2022

```{r select terrs}

# get list of territory names to keep from points file

names_to_keep <- gyr_terrs$GyrfalconTerritory

# filter the points

filtered_points <- points_sf %>%
  filter(GyrfalconTerritory %in% names_to_keep)

```

### Define buffer zones

Create 15km buffers around each point

First, need to convert points from geographic coordinate system to a projected coordinate system:

If you attempt to create a buffer in a geographic CRS, the distances are not accurately represented because they are based on degrees rather than meters or feet. This can lead to incorrect buffer sizes and shapes.

```{r buffer zones}

# Convert points to a projected crs if not already (e.g., UTM)
st_crs(filtered_points) # currently in WGS84
crs(willow_layer) # rasters are in NAD83 which is a projected coordinate system so we will use those to transfer the points to the same projection

points_utm <- st_transform(filtered_points, crs = st_crs(willow_layer))

# separate UTMS into separate columns for northing and easting values

#points_utm <- points_utm %>%
  #mutate(
   # easting = st_coordinates(geometry)[, 1],  # UTM easting (X coordinate)
    #northing = st_coordinates(geometry)[, 2]  # UTM northing (Y coordinate)
  #)


# Convert sf points to SpatVector for 'terra'
points_vect <- vect(points_utm)

# create a 15km buffer around each point

buffers <- buffer(points_vect, width = 15000)

# save as a shapefile
writeVector(buffers, "F:/Gyrfalcon Survey Data/buffered_territories.shp")
```

# Calculate area of buffered points

Calculate areas of buffered points using exactextrctr package - which is fine with rasters and SpatRasters, but not SpatVectors so will need to use sf object of the buffered points

### Load buffered points shapefile as sf object

If necessary, reload buffer shapefile

```{r load buff shp}

# buffers <- st_read("F:/Gyrfalcon Survey Data/buffered_territories.shp")
```

## Calculate area of each buffer using masked rasters from above

Using the 'exact_extract' function from the 'exactextractr' package and with the function 'count' counts the number (and fraction) of cells with non-NA values.

We will then multiple the number of non-NA cells covered by the buffer polygon by the pixel area - in this case each pixel in the raster represents 800x800 meters. So multiple the cell count by 640,000sqm to get total number of square meters covered in the maske buffer. Then can convert that into square kilometers.

```{r calc area}

??exact_extract

# Willow Ptarmigan  
willow_extract <- exactextractr::exact_extract(willow_mask, buffers, 'count', include_area = TRUE)  

#convert into table  
willow_extract <- as.data.frame(willow_extract)   

buffer_ids <- buffers$GyrfalconT  

willow_buffer_areas <- data.frame(GyrfalconTerritory = buffer_ids, Count = willow_extract$willow_extract) 

# convert cell counts to area in sqm and sqkm

willow_buffer_areas$area_sqm <- willow_buffer_areas$Count*640000

#divide area_sqm by 1000000 (1000x1000m)

willow_buffer_areas$area_sqkm <- willow_buffer_areas$area_sqm/1000000



# Rock Ptarmigan  

rock_extract <- exactextractr::exact_extract(rock_mask, buffers, 'count')  

#convert into table  
rock_extract <- as.data.frame(rock_extract)   

rock_buffer_areas <- data.frame(GyrfalconTerritory = buffer_ids, Count = rock_extract$rock_extract)   

# convert cell counts to area in sqm and sqkm

rock_buffer_areas$area_sqm <- rock_buffer_areas$Count*640000

#divide area_sqm by 1000000 (1000x1000m)

rock_buffer_areas$area_sqkm <- rock_buffer_areas$area_sqm/1000000

# Squirrel Ptarmigan 

squirrel_extract <- exactextractr::exact_extract(squirrel_mask, buffers, 'count')

#convert into table  
squirrel_extract <- as.data.frame(squirrel_extract)   

squirrel_buffer_areas <- data.frame(GyrfalconTerritory = buffer_ids, Count = squirrel_extract$squirrel_extract)

# convert cell counts to area in sqm and sqkm

squirrel_buffer_areas$area_sqm <- squirrel_buffer_areas$Count*640000

#divide area_sqm by 1000000 (1000x1000m)

squirrel_buffer_areas$area_sqkm <- squirrel_buffer_areas$area_sqm/1000000

```

# Extract abundance sums

```{r sum extract}

willow_sum <- exact_extract(willow_mask, buffers, 'sum')
willow_sum <- as.data.frame(willow_sum)   
willow_terr_sum <- data.frame(GyrfalconTerritory = buffer_ids, AbundanceSum = willow_sum$willow_sum)


rock_sum <- exact_extract(rock_mask, buffers, 'sum')
rock_sum <- as.data.frame(rock_sum)
rock_terr_sum <- data.frame(GyrfalconTerritory = buffer_ids, AbundanceSum = rock_sum$rock_sum)


squirrel_sum <- exact_extract(squirrel_mask, buffers, 'sum')
squirrel_sum <- as.data.frame(squirrel_sum)
squirrel_terr_sum <- data.frame(GyrfalconTerritory = buffer_ids, AbundanceSum = squirrel_sum$squirrel_sum)

```

# Extract abundance means

```{r mean extract}

willow_mean <- exact_extract(willow_mask, buffers, 'mean')
willow_mean <- as.data.frame(willow_mean)   
willow_terr_mean <- data.frame(GyrfalconTerritory = buffer_ids, AbundanceMean = willow_mean$willow_mean)


rock_mean <- exact_extract(rock_mask, buffers, 'mean')
rock_mean <- as.data.frame(rock_mean)
rock_terr_mean <- data.frame(GyrfalconTerritory = buffer_ids, AbundanceMean = rock_mean$rock_mean)


squirrel_mean <- exact_extract(squirrel_mask, buffers, 'mean')
squirrel_mean <- as.data.frame(squirrel_mean)
squirrel_terr_mean <- data.frame(GyrfalconTerritory = buffer_ids, AbundanceMean = squirrel_mean$squirrel_mean)


```

### Combine in dataframe with gyr territories and masked buffer sizes

and did a quick test on the willow ptarmigan that the 'abundance mean' calculated from exact extract is the average density (individuals/800x800m2) for each territory

```{r df mashup}

# Willow Ptarmigan

willow_mashup <- left_join(willow_buffer_areas, willow_terr_sum, by = "GyrfalconTerritory")

willow_mashup <- left_join(willow_mashup, willow_terr_mean, by = "GyrfalconTerritory")

# calculate 'willow ptarmigan per 800x800m area' for each territory?

willow_mashup$density_per800 <- willow_mashup$AbundanceSum/willow_mashup$Count


# Rock Ptarmigan

rock_mashup <- left_join(rock_buffer_areas, rock_terr_sum, by = "GyrfalconTerritory")

rock_mashup <- left_join(rock_mashup, rock_terr_mean, by = "GyrfalconTerritory")

# squirrel

squirrel_mashup <- left_join(squirrel_buffer_areas, squirrel_terr_sum, by = "GyrfalconTerritory")

squirrel_mashup <- left_join(squirrel_mashup, squirrel_terr_mean, by = "GyrfalconTerritory")
```

## Calculate sum(densities)/sum(pixelareas)

Units are male ptarmigan or squirrels per square km aka density per territory?

```{r more calcs}

# Willow

willow_mashup$territory_density <- willow_mashup$AbundanceSum/willow_mashup$area_sqkm


# Rock

rock_mashup$territory_density <- rock_mashup$AbundanceSum/rock_mashup$area_sqkm


# Squirrel

squirrel_mashup$territory_density <- squirrel_mashup$AbundanceSum/squirrel_mashup$area_sqkm

```

Add column of how many years territory was occupied by Gyrfalcons

```{r add gyr occ}

# separate territory ID column and years occupied
gyr_occ <- gyr_terrs[,c(2, 15)]

# add to mashups


willow_mashup2 <- left_join(willow_mashup, gyr_occ, by = 'GyrfalconTerritory')

rock_mashup2 <- left_join(rock_mashup, gyr_occ, by = 'GyrfalconTerritory')

squirrel_mashup2 <- left_join(squirrel_mashup, gyr_occ, by = 'GyrfalconTerritory')
```

# Plots looking at abundance within territories occupied by only Gyrfalcons

The following plots are plotting the density per territory (sum(density)/sum(pixelareas)) vs years occupied by Gyrfalcons only since 2016. These still include territories that had 0 years occupancy by Gyrfalcons since 2016. Only years occupied by gyrfalcons are considered in the 'years occupied'

#### Willow Ptarmigan

```{r plots}

# Willow mean density:

w_density_plot <- ggplot(willow_mashup2, aes(x = territory_density, y = years_occ_by_Gyrfalcon)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Willow Ptarmigan mean density vs. \n number of years territory was occupied by Gyrfalcons",
    x = "Density per territory (males/sqkm)",
    y = "Number years occupied by Gyrfalcons",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

w_density_plot

ggsave("F:/Gyrfalcon Survey Data/plots/willow_gyr_hist.png", plot = w_density_plot, width = 15, height = 10, dpi = 300)



```

#### Rock Ptarmigan

```{r rp plots}


rock_density_plot <- ggplot(rock_mashup2, aes(x = territory_density, y = years_occ_by_Gyrfalcon)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Rock Ptarmigan density vs. \n number years territory was occupied",
    x = "Density per territory (males/sqkm)",
    y = "Number of Years Occupied by Gyrfalcons",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

rock_density_plot

ggsave("F:/Gyrfalcon Survey Data/plots/rock_gyr_hist.png", plot = rock_density_plot, width = 15, height = 10, dpi = 300)
```

#### Arctic ground squirrel

```{r sq plots}


sq_density_plot <- ggplot(squirrel_mashup2, aes(x = territory_density, y = years_occ_by_Gyrfalcon)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Arctic ground squirrel density vs. \n number of years territory was occupied by Gyrfalcons",
    x = "Density per territory (squirrels/sqkm2)",
    y = "Number of Years Occupied by Gyrfalcons",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

sq_density_plot

ggsave("F:/Gyrfalcon Survey Data/plots/squirrel_gyr_hist.png", plot = sq_density_plot, width = 15, height = 10, dpi = 300)
```

# 

# Plots looking at abundance within territories occupied no matter what species

Importing csv that has number of years occupancy for all species (made in 'territory centers' script, and isolating only the columns needed.

```{r}
all_species_occ <- read.csv("F:/Gyrfalcon Survey Data/all_spec_all_terrs_occ.csv")

all_species_occ2 <- all_species_occ[,c(2, 15)]
# combine with abundance counts for each species

```

Match occupancy counts to species specific abundance and territory area dataframes then plot

#### Willow Ptarmigan

```{r all species plots}

# Willow

willow_mashup_allspecies <- left_join (all_species_occ2, willow_mashup, by = "GyrfalconTerritory")

#fix data for T08

values_to_copy <- willow_mashup[42, 2:8]
willow_mashup_allspecies[72, 3:9] <- values_to_copy

w_density_plot2 <- ggplot(willow_mashup_allspecies, aes(x = territory_density, y = years_occ_by_all)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Willow Ptarmigan density vs. \n number of years territory was occupied by all species",
    x = "Density per territory (males/sqkm)",
    y = "Number of years occupied by all species*",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

w_density_plot2

# *will need to make note in caption what 'all species' includes

ggsave("F:/Gyrfalcon Survey Data/plots/willow_all_hist.png", plot = w_density_plot2, width = 15, height = 10, dpi = 300)




```

#### Rock Ptarmigan

```{r rplots2}

# Rock

rock_mashup_allspecies <- left_join(all_species_occ2, rock_mashup, by = "GyrfalconTerritory")

values_to_copy2 <- rock_mashup[42, 2:7]
rock_mashup_allspecies[72, 3:8] <- values_to_copy2

r_density_plot2 <- ggplot(rock_mashup_allspecies, aes(x = territory_density, y = years_occ_by_all)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Rock Ptarmigan density vs. \n number of years territory was occupied by all species",
    x = "Density per territory (males/sqkm)",
    y = "Number of years occupied by all species*",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

r_density_plot2

# *will need to make note in caption what 'all species' includes

ggsave("F:/Gyrfalcon Survey Data/plots/rock_all_hist.png", plot = r_density_plot2, width = 15, height = 10, dpi = 300)
```

### Arctic ground squirrel

```{r splots2}

# Squirrel

squirrel_mashup_allspecies <- left_join(all_species_occ2, squirrel_mashup, by = "GyrfalconTerritory")

# add T08 values that didn't transfer over
values_to_copy3 <- squirrel_mashup[42, 2:7]
squirrel_mashup_allspecies[72, 3:8] <- values_to_copy3

s_density_plot2 <- ggplot(squirrel_mashup_allspecies, aes(x = territory_density, y = years_occ_by_all)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Arctic ground squirrel density vs. \n number of years territory was occupied by all species",
    x = "Density per territory (squirrels/sqkm)",
    y = "Number of years occupied by all species*",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

s_density_plot2

# *will need to make note in caption what 'all species' includes

ggsave("F:/Gyrfalcon Survey Data/plots/squirrel_all_hist.png", plot = s_density_plot2, width = 15, height = 10, dpi = 300)
```

# Plots looking at abundance in territories occupied by a Gyrfalcon at least once since 2016, but otherwise including all species

```{r leastonegyr}

least_one_gyr_occ <- read.csv("F:/Gyrfalcon Survey Data/all_spec_least1gyr_terrs_occ.csv")
# get rid of columns unnecessary to make plots
least_one_gyr_occ2 <- least_one_gyr_occ[,c(2,15)]

# Combine with abundance estimates of each species


```

#### Willow Ptarmigan

```{r wplot3}


willow_mashup_onegyr <- left_join(least_one_gyr_occ2, willow_mashup, by = "GyrfalconTerritory")

# again fix missing data for T08 that didn't transfer over
values_to_copy4 <- willow_mashup[42, 2:8]
willow_mashup_onegyr[44, 3:9] <- values_to_copy4



w_density_plot3 <- ggplot(willow_mashup_onegyr, aes(x = territory_density, y = years_occ)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Willow Ptarmigan mean density vs. \n number years territory was occupied",
    x = "Density per territory (males/sqkm)",
    y = "Number of Years Occupied",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

w_density_plot3

ggsave("F:/Gyrfalcon Survey Data/plots/willow_all_nohist.png", plot = w_density_plot3, width = 15, height = 10, dpi = 300)

```

#### Rock Ptarmigan

```{r rplot3}
# Rock

rock_mashup_onegyr <- left_join(least_one_gyr_occ2, rock_mashup, by = "GyrfalconTerritory")

values_to_copy5 <- rock_mashup[42, 2:7]
rock_mashup_onegyr[44, 3:8] <- values_to_copy5

r_density_plot3 <- ggplot(rock_mashup_onegyr, aes(x = territory_density, y = years_occ)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Rock Ptarmigan mean density vs. \n number years territory was occupied",
    x = "Density per territory (males/sqkm)",
    y = "Number of Years Occupied",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

r_density_plot3

ggsave("F:/Gyrfalcon Survey Data/plots/rock_all_nohist.png", plot = r_density_plot3, width = 15, height = 10, dpi = 300)
```

#### Arctic ground squirrel

```{r splot3}

# Squirrel

squirrel_mashup_onegyr <- left_join(least_one_gyr_occ2, squirrel_mashup, by = "GyrfalconTerritory")

# add T08 values that didn't transfer over
values_to_copy6 <- squirrel_mashup[42, 2:7]
squirrel_mashup_onegyr[44, 3:8] <- values_to_copy6


s_density_plot3 <- ggplot(squirrel_mashup_onegyr, aes(x = territory_density, y = years_occ)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Arctic ground squirrel density vs. \n number years territory was occupied by all species",
    x = "Density per territory (squirrels/sqkm)",
    y = "Number of Years Occupied",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

s_density_plot3

ggsave("F:/Gyrfalcon Survey Data/plots/squirrel_all_nohist.png", plot = s_density_plot3, width = 15, height = 10, dpi = 300)
```

# Plots looking at abundance within territories occupied by only Gyrfalcons, not including territories with ZERO gyrfalcon occupancy since 2016

```{r gyr no histterrs}

# match up territory density etsimates of each species with table of years occupied by gyrfalcons then filter with table of territories occupied by gyrs at least one year


# 1. match prey territory abundances/densities with years occupied by gyrs only

# already done - these are the willow/rock/squirrel_mashup2 talbes


# 2. filter out territories with no Gyrfalcon occupancy since 2016


willow_gyronly_nohist <- left_join(least_one_gyr_occ2, willow_mashup2, by = "GyrfalconTerritory")

# take out the column of all species occupancy so no confusion when plotting

willow_gyronly_nohist <- willow_gyronly_nohist[,-c(2)]


# copy over data from T08 that didn't copy over

willow_gyronly_nohist[44, 2:9] <- willow_mashup2[42, 2:9]


```

### Willow Plot

```{r wplot4}

w_density_plot4 <- ggplot(willow_gyronly_nohist, aes(x = territory_density, y = years_occ_by_Gyrfalcon)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Willow Ptarmigan mean density vs. \n number years territory was occupied by Gyrfalcons",
    x = "Density per territory (males/sqkm)",
    y = "Number of Years Occupied by Gyrfalcons",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

w_density_plot4


ggsave("F:/Gyrfalcon Survey Data/plots/willow_gyr_nohist.png", plot = w_density_plot4, width = 15, height = 10, dpi = 300)
```

### Rock Ptarmigan

```{r rplot4}

rock_gyronly_nohist <- left_join(least_one_gyr_occ2, rock_mashup2, by = "GyrfalconTerritory")

# take out the column of all species occupancy so no confusion when plotting

rock_gyronly_nohist <- rock_gyronly_nohist[,-c(2)]


# copy over data from T08 that didn't copy over

rock_gyronly_nohist[44, 2:8] <- rock_mashup2[42, 2:8]


# PLOT

r_density_plot4 <- ggplot(rock_gyronly_nohist, aes(x = territory_density, y = years_occ_by_Gyrfalcon)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Rock Ptarmigan mean density vs. \n number years territory was occupied by Gyrfalcons",
    x = "Density per territory (males/sqkm)",
    y = "Number of Years Occupied by Gyrfalcons",
    color = "Territory Name"
  ) +
  theme_classic(base_size=25)

r_density_plot4

ggsave("F:/Gyrfalcon Survey Data/plots/rock_gyr_nohist.png", plot = r_density_plot4, width = 15, height = 10, dpi = 300)

```

### Arctic ground squirrel

```{r splot4}

squirrel_gyronly_nohist <- left_join(least_one_gyr_occ2, squirrel_mashup2, by = "GyrfalconTerritory")

# take out the column of all species occupancy so no confusion when plotting

squirrel_gyronly_nohist <- squirrel_gyronly_nohist[,-c(2)]


# copy over data from T08 that didn't copy over

squirrel_gyronly_nohist[44, 2:8] <- squirrel_mashup2[42, 2:8]


# PLOT

s_density_plot4 <- ggplot(squirrel_gyronly_nohist, aes(x = territory_density, y = years_occ_by_Gyrfalcon)) +
  geom_point(aes(color = GyrfalconTerritory), size = 3) +
   #geom_smooth(method = "lm", se = FALSE, color = "red") +  # Adds a linear trendline
  labs(
    title = "Arctic ground squirrel mean density vs. \n number years territory was occupied by Gyrfalcons",
    x = "Density per territory (squirrels/sqkm)",
    y = "Number of Years Occupied by Gyrfalcons",
    color = "Territory Name"
  ) +
  theme_classic(base_size = 25)

s_density_plot4

ggsave("F:/Gyrfalcon Survey Data/plots/squirrel_gyr_nohist.png", plot = s_density_plot4, width = 15, height = 10, dpi = 300)

```

```{r save workspace}

save.image(file = "F:/Gyrfalcon Survey Data/abundanceXoccupancy_workspace.RData")
```

# Occupancy Analysis

## Library

```{r}

library(unmarked)
```

## Load Data

We'll be able to filter out the 72 territories we were using above with one of those dataframes but we need some more of the survey data so we'll bring back in the original dataframe because we also need the secondary survey data

```{r}
og_data <- read.csv("F:/Gyrfalcon Survey Data/Booms/BoomsGyrfalonTerritorySurveys.csv")




```

## Clean and transform

```{r clean and filter}

# filter out territories 

# make list of the 72 territory names
terrs_to_keep <- gyr_occ$GyrfalconTerritory


# now keep only those rows that have one of these names in the territory name column

filtered_occ_df <- og_data %>%
  filter(GyrfalconTerritory %in% terrs_to_keep)


# take out unecessary columns

filtered_occ_df2 <- filtered_occ_df[,c(1:10, 12)]

# need to filter out years before 2016:

filtered_occ_df3 <- filtered_occ_df2 %>%
  filter(SurveyYear >= 2016 & SurveyYear <= 2022)

# some rows are duplicates for the same survey for the same territory and site ID - lets consolidate those first. But the 'common_name' is different between the two, some have a species and the second duplicate row has NULL, so in this case we'll keep the value that isn't 'NULL'

```
